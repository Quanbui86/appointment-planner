{"ast":null,"code":"var _jsxFileName = \"D:\\\\QuanRep\\\\job-learn\\\\appointment-planner\\\\src\\\\components\\\\contactPicker\\\\ContactPicker.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactPicker = _ref => {\n  let {\n    handleChange,\n    contacts,\n    appointmentForm\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"name\",\n      onChange: handleChange,\n      value: appointmentForm.name,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: contact.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 43\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ContactPicker;\nvar _c;\n$RefreshReg$(_c, \"ContactPicker\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactPicker","_ref","handleChange","contacts","appointmentForm","children","name","onChange","value","required","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","index","_c","$RefreshReg$"],"sources":["D:/QuanRep/job-learn/appointment-planner/src/components/contactPicker/ContactPicker.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({ handleChange, contacts, appointmentForm }) => {\r\n\r\n  return (\r\n    <>\r\n      <select\r\n        name='name'\r\n        onChange={handleChange}\r\n        value={appointmentForm.name}\r\n        required\r\n      >\r\n        <option value=''>Choose contact</option>\r\n        {contacts.map((contact, index) => <option key={index}>{contact.name}</option>)}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,OAAO,MAAMC,aAAa,GAAGC,IAAA,IAAiD;EAAA,IAAhD;IAAEC,YAAY;IAAEC,QAAQ;IAAEC;EAAgB,CAAC,GAAAH,IAAA;EAEvE,oBACEJ,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACER,OAAA;MACES,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAEL,YAAa;MACvBM,KAAK,EAAEJ,eAAe,CAACE,IAAK;MAC5BG,QAAQ;MAAAJ,QAAA,gBAERR,OAAA;QAAQW,KAAK,EAAC,EAAE;QAAAH,QAAA,EAAC;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EACvCV,QAAQ,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAAKnB,OAAA;QAAAQ,QAAA,EAAqBU,OAAO,CAACT;MAAI,GAApBU,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAyB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACvE,iBACR;AAEP,CAAC;AAACI,EAAA,GAfWjB,aAAa;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}