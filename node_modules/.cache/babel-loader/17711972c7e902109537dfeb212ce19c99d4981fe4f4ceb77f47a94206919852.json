{"ast":null,"code":"var _jsxFileName = \"D:\\\\QuanRep\\\\job-learn\\\\appointment-planner\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [contacts, setContact] = useState({\n    name: 'Leanne Graham',\n    phone: 1 - 770 - 736 - 8031,\n    email: 'Sincere@april.biz'\n  });\n  const [appointments, setAppointments] = useState({\n    title: 'Leanne Graham',\n    contact: {\n      name: 'Leanne Graham',\n      phone: 1 - 770 - 736 - 8031,\n      date: '22-10-2020',\n      time: '15h30'\n    },\n    email: 'Sincere@april.biz'\n  });\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  const [userData, setUserData] = useState();\n  useEffect(() => {\n    const url = 'https://jsonplaceholder.typicode.com/users';\n    fetch(url).then(response => response.json()).then(json => {\n      setUserData(json);\n      console.log(json);\n    });\n  }, []);\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 30\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        userData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 46\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        userData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 50\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AUtapZWDPit8Vki5S5PKs1PX018=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContact","name","phone","email","appointments","setAppointments","title","contact","date","time","userData","setUserData","url","fetch","then","response","json","console","log","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["D:/QuanRep/job-learn/appointment-planner/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [contacts, setContact] = useState({\r\n    name: 'Leanne Graham',\r\n    phone: 1 - 770 - 736 - 8031,\r\n    email: 'Sincere@april.biz'\r\n  })\r\n  const [appointments, setAppointments] = useState({\r\n    title: 'Leanne Graham',\r\n    contact: {\r\n      name: 'Leanne Graham',\r\n      phone: 1 - 770 - 736 - 8031,\r\n      date: '22-10-2020',\r\n      time : '15h30'\r\n    },\r\n    email: 'Sincere@april.biz'\r\n  })\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  const [userData, setUserData] = useState();\r\n  useEffect(() => {\r\n    const url = 'https://jsonplaceholder.typicode.com/users'\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setUserData(json)\r\n        console.log(json)\r\n      }\r\n      );\r\n  }, [])\r\n\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={<Root />}>\r\n      <Route index element={<Navigate to={ROUTES.CONTACTS} replace />} />\r\n      <Route path={ROUTES.CONTACTS} element={<ContactsPage userData={userData} /> /* Add props to ContactsPage */} />\r\n      <Route path={ROUTES.APPOINTMENTS} element={<AppointmentsPage userData={userData} /> /* Add props to AppointmentsPage */} />\r\n    </Route>\r\n  ));\r\n\r\n  return (\r\n    <RouterProvider router={router} />\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}