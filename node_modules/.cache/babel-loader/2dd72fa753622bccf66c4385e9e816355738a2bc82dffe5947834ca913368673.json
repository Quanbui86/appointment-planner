{"ast":null,"code":"var _jsxFileName = \"D:\\\\QuanRep\\\\job-learn\\\\appointment-planner\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport \"../src/style/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [contacts, setContacts] = useState([{\n    name: 'Leanne Graham',\n    phone: 1 - 770 - 736 - 8031,\n    email: 'Sincere@april.biz'\n  }]);\n  const [appointments, setAppointments] = useState([{\n    title: 'Leanne Graham',\n    contact: {\n      name: 'Leanne Graham',\n      phone: 1 - 770 - 736 - 8031,\n      email: 'Sincere@april.biz'\n    },\n    date: '22-10-2020',\n    time: '15h30'\n  }]);\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  function addContact(newContact) {\n    setContacts(prev => [...prev, newContact]);\n  }\n  function addAppointments(newAppointments) {\n    setContacts(prev => [...prev, newAppointments]);\n  }\n  console.log(contacts);\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/appointment-planner\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 49\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        contacts: contacts,\n        addContact: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 46\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        userData: appointments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 50\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2JX6Tbx6USaG2i3Hr+gr0ap0Clc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","name","phone","email","appointments","setAppointments","title","contact","date","time","addContact","newContact","prev","addAppointments","newAppointments","console","log","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","APPOINTMENTS","userData","_c","$RefreshReg$"],"sources":["D:/QuanRep/job-learn/appointment-planner/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\nimport \"../src/style/style.css\"\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [contacts, setContacts] = useState([{\r\n    name: 'Leanne Graham',\r\n    phone: 1 - 770 - 736 - 8031,\r\n    email: 'Sincere@april.biz'\r\n  }])\r\n  const [appointments, setAppointments] = useState([{\r\n    title: 'Leanne Graham',\r\n    contact: {\r\n      name: 'Leanne Graham',\r\n      phone: 1 - 770 - 736 - 8031,\r\n      email: 'Sincere@april.biz'\r\n    },\r\n    date: '22-10-2020',\r\n    time: '15h30'\r\n  }])\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  function addContact(newContact) {\r\n    setContacts(prev => [...prev, newContact])\r\n  }\r\n  function addAppointments(newAppointments) {\r\n    setContacts(prev => [...prev, newAppointments])\r\n  }\r\n  console.log(contacts)\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/appointment-planner\" element={<Root />}>\r\n      <Route index element={<Navigate to={ROUTES.CONTACTS} replace />} />\r\n      <Route path={ROUTES.CONTACTS} element={<ContactsPage contacts={contacts} addContact={addContact}/> /* Add props to ContactsPage */} />\r\n      <Route path={ROUTES.APPOINTMENTS} element={<AppointmentsPage userData={appointments} /> /* Add props to AppointmentsPage */} />\r\n    </Route>\r\n  ));\r\n\r\n  return (\r\n    <RouterProvider router={router} />\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}